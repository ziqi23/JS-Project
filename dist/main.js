/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("//Object oriented programming - constructor for each HTML element\nconst Data = __webpack_require__(/*! ./scripts/data.js */ \"./src/scripts/data.js\");\nconst CreateGraph = __webpack_require__(/*! ./scripts/createGraph.js */ \"./src/scripts/createGraph.js\");\nconst cpiGraph = document.getElementById(\"svg-graph\");\nconst eciGraph = document.getElementById(\"eci-graph\");\nasync function createEciGraph(startYear, endYear) {\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"general\";\n  let d = new Data();\n  let g = new CreateGraph();\n  let dataset;\n  if (type === \"general\") {\n    dataset = await d.fetchRegularEciData(startYear, endYear);\n  } else {\n    dataset = await d.fetchEciDataByIndustry(type, startYear, endYear);\n  }\n  g.createEciGraph(dataset, startYear, endYear);\n}\ncreateEciGraph(2012, 2022, \"professionalServices\");\nasync function createCpiGraph(startYear, endYear) {\n  let d = new Data();\n  let g = new CreateGraph();\n  let dataset = await d.fetchCpiData(startYear, endYear);\n  g.createCpiGraph(dataset, startYear, endYear);\n}\ncreateCpiGraph(2015, 2023);\nlet toggleButton = document.getElementById(\"toggle-graph\");\nlet goodsButton = document.getElementById(\"goods\");\nlet servicesButton = document.getElementById(\"services\");\ntoggleButton.addEventListener('click', handleClick);\nfunction handleClick(e) {\n  e.preventDefault();\n  // console.log(el.style.display)\n  if (cpiGraph.getAttribute(\"visibility\") === \"visible\") {\n    cpiGraph.setAttribute(\"visibility\", \"hidden\");\n  } else {\n    cpiGraph.setAttribute(\"visibility\", \"visible\");\n  }\n}\n\n// goodsButton.addEventListener('click', handleGoodsClick);\n\n// function handleGoodsClick(e) {\n//     e.preventDefault();\n//     let container = document.getElementById(\"eci-graph\")\n//     container.remove();\n\n//     let newContainer = document.createElement(\"svg\");\n//     newContainer.setAttribute(\"id\", \"eci-graph\");\n//     document.getElementById(\"eci-holder\").appendChild(newContainer);\n//     createEciGraph(2015, 2022);\n// }\n\n// let cpiData;\n// // let salaryData;\n// let eciData;\n\n// async function fetchData() {\n//     cpiData = await fetch(\"https://data.nasdaq.com/api/v3/datasets/RATEINF/CPI_USA?start_date=2015-02-28&end_date=2023-02-28&api_key=z4ZhwWk_L5Tp-MszdTFD\")\n//     .then(async function (response) {\n//         // console.log(response)\n//         cpiData = await response.json();\n//             console.log(cpiData.dataset.data.reverse())\n//             createGraph2(cpiData.dataset.data.reverse());\n\n//         // data.dataset.data.forEach((date) => {\n//         //     let newEle = document.createElement(\"div\");\n//         //     newEle.innerHTML = date;\n//         //     el.appendChild(newEle);\n//         // })\n//         // console.log(newEle);\n//     })\n//     return cpiData\n// }\n\n// fetchData();\n\n// salaryData = fetch(\"https://api.stlouisfed.org/fred/series/observations?series_id=CEU0500000003&api_key=50c37cf826ff0bb2e15e19cb6d19483f&file_type=json\", {headers: {'Access-Control-Allow-Origin': '*'}})\n//         .then(async function(res) {\n//             console.log(res);\n//             salaryData = res.json();\n//             console.log(salaryData);\n//         })\n\n// fetch(\"https://api.bls.gov/publicAPI/v2/timeseries/data/CMU2010000000000D?registrationkey=7f547dfafd2b470cbd505daa838b9304&catalog=true&startyear=2015&endyear=2022\")\n//     .then(async function(response) {\n//         // console.log(response);\n//         eciData = await response.json();\n//         // console.log(eciData.Results.series[0].data);\n//         createEciGraph(eciData.Results.series[0].data.reverse());\n//     })//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/createGraph.js":
/*!************************************!*\
  !*** ./src/scripts/createGraph.js ***!
  \************************************/
/***/ (function(module) {

eval("class CreateGraph {\n  createEciGraph(dataset, startYear, endYear) {\n    // Currently assumes data in [[key, value], ...] format\n\n    let margin = {\n      left: 50,\n      bottom: 50,\n      top: 50,\n      right: 50\n    }; // Define margins\n    let svgWidth = 1000,\n      svgHeight = 500; // Define container size\n    let width = svgWidth - margin.left - margin.right; // Define inner container size\n    let height = svgHeight - margin.bottom - margin.right; // Define inner container size\n    let eachWidth = width / dataset.length; // Define space between each data point\n\n    let svg = d3.select(\"#eci-graph\") // Set HTML element to container size\n    .attr(\"width\", svgWidth).attr(\"height\", svgHeight);\n    let xScale = d3.scaleTime() // Define x axis scaling to fill container area\n    .domain([new Date(`${startYear}-03-31`), new Date(`${endYear}-12-31`)]).range([0, width]);\n    let yScale = d3.scaleLinear() // Define y axis scaling to fill container area\n    .domain([0, 2]).range([height, 0]);\n    let xAxis = d3.axisBottom() // Create x axis and define number of ticks\n    .scale(xScale).ticks(8);\n    let yAxis = d3.axisLeft() // Create y axis and define number of ticks\n    .scale(yScale);\n    let cpiChart = svg.selectAll(\"circle\") // Plot data points\n    .data(dataset) // Import dataset\n    .enter() // For each data element\n    .append(\"circle\") // Append to the SVG a circle element\n    .attr(\"transform\", `translate(${margin.left}, ${margin.bottom})`) // Account for padding\n    .attr(\"cx\", (data, index) => eachWidth * index) // x coordinate\n    .attr(\"cy\", data => yScale(data.value)) // y coordinate\n    .attr(\"r\", 1) // radius\n    .attr(\"stroke\", \"black\");\n    svg.append(\"g\") // Append y Axis\n    .attr(\"transform\", `translate(${margin.left}, ${margin.bottom})`).call(yAxis);\n    svg.append(\"g\") // Append x Axis\n    .attr(\"transform\", `translate(${margin.left}, ${svgHeight - margin.bottom})`).call(xAxis);\n  }\n  createCpiGraph(dataset, startYear, endYear) {\n    // Currently assumes data in [[key, value], ...] format\n\n    let margin = {\n      left: 50,\n      bottom: 50,\n      top: 50,\n      right: 50\n    }; // Define margins\n    let svgWidth = 1000,\n      svgHeight = 500; // Define container size\n    let width = svgWidth - margin.left - margin.right; // Define inner container size\n    let height = svgHeight - margin.bottom - margin.right; // Define inner container size\n    let eachWidth = width / dataset.length; // Define space between each data point\n\n    let svg = d3.select(\"#svg-graph\") // Set HTML element to container size\n    .attr(\"width\", svgWidth).attr(\"height\", svgHeight);\n    let xScale = d3.scaleTime() // Define x axis scaling to fill container area\n    .domain([new Date(`${startYear}-01-01`), new Date(`${endYear}-12-31`)]).range([0, width]);\n    let yScale = d3.scaleLinear() // Define y axis scaling to fill container area\n    .domain([200, 400]).range([height, 0]);\n    let xAxis = d3.axisBottom() // Create x axis and define number of ticks\n    .scale(xScale).ticks(8);\n    let yAxis = d3.axisLeft() // Create y axis and define number of ticks\n    .scale(yScale);\n    let cpiChart = svg.selectAll(\"circle\") // Plot data points\n    .data(dataset) // Import dataset\n    .enter() // For each data element\n    .append(\"circle\") // Append to the SVG a circle element\n    .attr(\"transform\", `translate(${margin.left}, ${margin.bottom})`) // Account for padding\n    .attr(\"cx\", (data, index) => eachWidth * index) // x coordinate\n    .attr(\"cy\", data => yScale(data[1])) // y coordinate\n    .attr(\"r\", 1) // radius\n    .attr(\"stroke\", \"black\");\n    svg.append(\"g\") // Append y Axis\n    .attr(\"transform\", `translate(${margin.left}, ${margin.bottom})`).call(yAxis);\n    svg.append(\"g\") // Append x Axis\n    .attr(\"transform\", `translate(${margin.left}, ${svgHeight - margin.bottom})`).call(xAxis);\n  }\n}\nmodule.exports = CreateGraph;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/createGraph.js\n");

/***/ }),

/***/ "./src/scripts/data.js":
/*!*****************************!*\
  !*** ./src/scripts/data.js ***!
  \*****************************/
/***/ (function(module) {

eval("//\tTotal compensation for Private industry workers in various industries and occupations, 3-month percent change\n\nclass Data {\n  constructor(url) {\n    this.url = url;\n  }\n  async fetchRegularEciData(startYear, endYear) {\n    return fetch(`https://api.bls.gov/publicAPI/v2/timeseries/data/CIS2010000000000Q?registrationkey=7f547dfafd2b470cbd505daa838b9304&catalog=true&startyear=${startYear}&endyear=${endYear}`).then(function (response) {\n      return response.json();\n    }).then(res => {\n      return res.Results.series[0].data.reverse();\n    });\n  }\n  async fetchEciDataByIndustry(industry, startYear, endYear) {\n    const seriesId = {\n      finance: \"CIS201520A000000Q\",\n      professionalServices: \"CIS201540A000000Q\",\n      educationAndHealthServices: \"CIS2016000000000Q\",\n      leisureAndHospitality: \"CIS2017000000000Q\",\n      goodProducing: \"CIS201G000000000Q\",\n      serviceProviding: \"CIS201S000000000Q\"\n    };\n    return fetch(`https://api.bls.gov/publicAPI/v2/timeseries/data/${seriesId[industry]}?registrationkey=7f547dfafd2b470cbd505daa838b9304&catalog=true&startyear=${startYear}&endyear=${endYear}`).then(async function (response) {\n      return response.json();\n    }).then(res => {\n      return res.Results.series[0].data.reverse();\n    });\n  }\n  async fetchCpiData(startYear, endYear) {\n    return fetch(`https://data.nasdaq.com/api/v3/datasets/RATEINF/CPI_USA?start_date=${startYear}-01-01&end_date=${endYear}-12-31&api_key=z4ZhwWk_L5Tp-MszdTFD`).then(async function (response) {\n      return response.json();\n    }).then(res => {\n      return res.dataset.data.reverse();\n    });\n  }\n}\nmodule.exports = Data;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9kYXRhLmpzLmpzIiwibmFtZXMiOlsiRGF0YSIsImNvbnN0cnVjdG9yIiwidXJsIiwiZmV0Y2hSZWd1bGFyRWNpRGF0YSIsInN0YXJ0WWVhciIsImVuZFllYXIiLCJmZXRjaCIsInRoZW4iLCJyZXNwb25zZSIsImpzb24iLCJyZXMiLCJSZXN1bHRzIiwic2VyaWVzIiwiZGF0YSIsInJldmVyc2UiLCJmZXRjaEVjaURhdGFCeUluZHVzdHJ5IiwiaW5kdXN0cnkiLCJzZXJpZXNJZCIsImZpbmFuY2UiLCJwcm9mZXNzaW9uYWxTZXJ2aWNlcyIsImVkdWNhdGlvbkFuZEhlYWx0aFNlcnZpY2VzIiwibGVpc3VyZUFuZEhvc3BpdGFsaXR5IiwiZ29vZFByb2R1Y2luZyIsInNlcnZpY2VQcm92aWRpbmciLCJmZXRjaENwaURhdGEiLCJkYXRhc2V0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNfd2Fsa3Rocm91Z2gvLi9zcmMvc2NyaXB0cy9kYXRhLmpzP2ZiZDEiXSwic291cmNlc0NvbnRlbnQiOlsiLy9cdFRvdGFsIGNvbXBlbnNhdGlvbiBmb3IgUHJpdmF0ZSBpbmR1c3RyeSB3b3JrZXJzIGluIHZhcmlvdXMgaW5kdXN0cmllcyBhbmQgb2NjdXBhdGlvbnMsIDMtbW9udGggcGVyY2VudCBjaGFuZ2VcclxuXHJcbmNsYXNzIERhdGEge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHVybCkge1xyXG4gICAgICAgIHRoaXMudXJsID0gdXJsO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIGZldGNoUmVndWxhckVjaURhdGEoc3RhcnRZZWFyLCBlbmRZZWFyKSB7XHJcbiAgICAgICAgcmV0dXJuIGZldGNoKGBodHRwczovL2FwaS5ibHMuZ292L3B1YmxpY0FQSS92Mi90aW1lc2VyaWVzL2RhdGEvQ0lTMjAxMDAwMDAwMDAwMFE/cmVnaXN0cmF0aW9ua2V5PTdmNTQ3ZGZhZmQyYjQ3MGNiZDUwNWRhYTgzOGI5MzA0JmNhdGFsb2c9dHJ1ZSZzdGFydHllYXI9JHtzdGFydFllYXJ9JmVuZHllYXI9JHtlbmRZZWFyfWApXHJcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuUmVzdWx0cy5zZXJpZXNbMF0uZGF0YS5yZXZlcnNlKCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgZmV0Y2hFY2lEYXRhQnlJbmR1c3RyeShpbmR1c3RyeSwgc3RhcnRZZWFyLCBlbmRZZWFyKSB7XHJcbiAgICAgICAgY29uc3Qgc2VyaWVzSWQgPSB7XHJcbiAgICAgICAgICAgIGZpbmFuY2U6IFwiQ0lTMjAxNTIwQTAwMDAwMFFcIiwgXHJcbiAgICAgICAgICAgIHByb2Zlc3Npb25hbFNlcnZpY2VzOiBcIkNJUzIwMTU0MEEwMDAwMDBRXCIsXHJcbiAgICAgICAgICAgIGVkdWNhdGlvbkFuZEhlYWx0aFNlcnZpY2VzOiBcIkNJUzIwMTYwMDAwMDAwMDBRXCIsXHJcbiAgICAgICAgICAgIGxlaXN1cmVBbmRIb3NwaXRhbGl0eTogXCJDSVMyMDE3MDAwMDAwMDAwUVwiLFxyXG4gICAgICAgICAgICBnb29kUHJvZHVjaW5nOiBcIkNJUzIwMUcwMDAwMDAwMDBRXCIsXHJcbiAgICAgICAgICAgIHNlcnZpY2VQcm92aWRpbmc6IFwiQ0lTMjAxUzAwMDAwMDAwMFFcIlxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGZldGNoKGBodHRwczovL2FwaS5ibHMuZ292L3B1YmxpY0FQSS92Mi90aW1lc2VyaWVzL2RhdGEvJHtzZXJpZXNJZFtpbmR1c3RyeV19P3JlZ2lzdHJhdGlvbmtleT03ZjU0N2RmYWZkMmI0NzBjYmQ1MDVkYWE4MzhiOTMwNCZjYXRhbG9nPXRydWUmc3RhcnR5ZWFyPSR7c3RhcnRZZWFyfSZlbmR5ZWFyPSR7ZW5kWWVhcn1gKVxyXG4gICAgICAgICAgICAudGhlbihhc3luYyBmdW5jdGlvbihyZXNwb25zZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLlJlc3VsdHMuc2VyaWVzWzBdLmRhdGEucmV2ZXJzZSgpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIGZldGNoQ3BpRGF0YShzdGFydFllYXIsIGVuZFllYXIpIHtcclxuICAgICAgICByZXR1cm4gZmV0Y2goYGh0dHBzOi8vZGF0YS5uYXNkYXEuY29tL2FwaS92My9kYXRhc2V0cy9SQVRFSU5GL0NQSV9VU0E/c3RhcnRfZGF0ZT0ke3N0YXJ0WWVhcn0tMDEtMDEmZW5kX2RhdGU9JHtlbmRZZWFyfS0xMi0zMSZhcGlfa2V5PXo0Wmh3V2tfTDVUcC1Nc3pkVEZEYClcclxuICAgICAgICAgICAgLnRoZW4oYXN5bmMgZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpIFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmRhdGFzZXQuZGF0YS5yZXZlcnNlKCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IERhdGE7Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxNQUFNQSxJQUFJLENBQUM7RUFFUEMsV0FBV0EsQ0FBQ0MsR0FBRyxFQUFFO0lBQ2IsSUFBSSxDQUFDQSxHQUFHLEdBQUdBLEdBQUc7RUFDbEI7RUFFQSxNQUFNQyxtQkFBbUJBLENBQUNDLFNBQVMsRUFBRUMsT0FBTyxFQUFFO0lBQzFDLE9BQU9DLEtBQUssQ0FBRSw4SUFBNklGLFNBQVUsWUFBV0MsT0FBUSxFQUFDLENBQUMsQ0FDckxFLElBQUksQ0FBQyxVQUFTQyxRQUFRLEVBQUU7TUFDckIsT0FBT0EsUUFBUSxDQUFDQyxJQUFJLEVBQUU7SUFDMUIsQ0FBQyxDQUFDLENBQ0RGLElBQUksQ0FBRUcsR0FBRyxJQUFLO01BQ1gsT0FBT0EsR0FBRyxDQUFDQyxPQUFPLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsSUFBSSxDQUFDQyxPQUFPLEVBQUU7SUFDL0MsQ0FBQyxDQUFDO0VBQ1Y7RUFFQSxNQUFNQyxzQkFBc0JBLENBQUNDLFFBQVEsRUFBRVosU0FBUyxFQUFFQyxPQUFPLEVBQUU7SUFDdkQsTUFBTVksUUFBUSxHQUFHO01BQ2JDLE9BQU8sRUFBRSxtQkFBbUI7TUFDNUJDLG9CQUFvQixFQUFFLG1CQUFtQjtNQUN6Q0MsMEJBQTBCLEVBQUUsbUJBQW1CO01BQy9DQyxxQkFBcUIsRUFBRSxtQkFBbUI7TUFDMUNDLGFBQWEsRUFBRSxtQkFBbUI7TUFDbENDLGdCQUFnQixFQUFFO0lBQ3RCLENBQUM7SUFFRCxPQUFPakIsS0FBSyxDQUFFLG9EQUFtRFcsUUFBUSxDQUFDRCxRQUFRLENBQUUsNEVBQTJFWixTQUFVLFlBQVdDLE9BQVEsRUFBQyxDQUFDLENBQ3pMRSxJQUFJLENBQUMsZ0JBQWVDLFFBQVEsRUFBRTtNQUMzQixPQUFPQSxRQUFRLENBQUNDLElBQUksRUFBRTtJQUMxQixDQUFDLENBQUMsQ0FDREYsSUFBSSxDQUFFRyxHQUFHLElBQUs7TUFDWCxPQUFPQSxHQUFHLENBQUNDLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDQyxJQUFJLENBQUNDLE9BQU8sRUFBRTtJQUMvQyxDQUFDLENBQUM7RUFDVjtFQUVBLE1BQU1VLFlBQVlBLENBQUNwQixTQUFTLEVBQUVDLE9BQU8sRUFBRTtJQUNuQyxPQUFPQyxLQUFLLENBQUUsc0VBQXFFRixTQUFVLG1CQUFrQkMsT0FBUSxxQ0FBb0MsQ0FBQyxDQUN2SkUsSUFBSSxDQUFDLGdCQUFnQkMsUUFBUSxFQUFFO01BQzVCLE9BQU9BLFFBQVEsQ0FBQ0MsSUFBSSxFQUFFO0lBQzFCLENBQUMsQ0FBQyxDQUNERixJQUFJLENBQUVHLEdBQUcsSUFBSztNQUNYLE9BQU9BLEdBQUcsQ0FBQ2UsT0FBTyxDQUFDWixJQUFJLENBQUNDLE9BQU8sRUFBRTtJQUNyQyxDQUFDLENBQUM7RUFDVjtBQUNKO0FBR0FZLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHM0IsSUFBSSJ9\n//# sourceURL=webpack-internal:///./src/scripts/data.js\n");

/***/ }),

/***/ "./src/index.css":
/*!***********************!*\
  !*** ./src/index.css ***!
  \***********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguY3NzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2pzX3dhbGt0aHJvdWdoLy4vc3JjL2luZGV4LmNzcz84MDZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.css\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.css");
/******/ 	
/******/ })()
;